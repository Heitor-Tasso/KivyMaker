#: import KVIconInput KVuix.KVinputs
#: import KVButtonEffect KVuix.KVbuttons
#: import hex kivy.utils.get_color_from_hex

<AnchorIcon@AnchorLayout>:
    size_hint_x:None
    width:'70dp'
    anchor_x:'center'
    anchor_y:'center'

<KVButtonIcon@Button>:
    canvas:
        Color:
            rgba:self.icon_color
        Rectangle:
            size:self.size
            pos:self.pos
            source:self.icon_source
    icon_color:[1, 1, 1, 1]
    icon_source:''
    size_hint:None, None
    size:'40dp', '40dp'
    background_color:[0, 0, 0, 0]

<KVToggleButtonIcon@ToggleButton>:
    icon_color:[1, 1, 1, 1]
    icon_source:''
    canvas:
        Color:
            rgba:self.icon_color
        Rectangle:
            size:self.size
            pos:self.pos
            source:self.icon_source
    size_hint:None, None
    size:'30dp', '30dp'
    background_color:[0, 0, 0, 0]

<TollBarTop@BoxLayout>:
    size_hint_y:None
    height:'55dp'
    canvas:
        Color:
            rgba:hex('#282a36')
        Rectangle:
            size:self.size
            pos:self.pos

<Init_screen>:
    orientation:'vertical'
    orange_sunset: hex('#ff5555')
    ScreenManager:
        id:tl
        Screen:
            name:'config'
            BoxLayout:
                orientation:'vertical'
                TollBarTop:
                    AnchorIcon:
                        KVButtonIcon:
                            icon_source:root._icons+'exit.png'
                            on_release:app.stop(app)
                    Label:
                        text:'Configurando'
                        font_size: '20sp'
                    AnchorIcon:
                        KVButtonIcon:
                            icon_source:root._icons+'help.png'
                               
                         
                AnchorLayout:
                    pad:root.width/5
                    padding:[self.pad, 70, self.pad, 70] if root.width > dp(500) else [10, 70, 10, 70]
                    canvas:
                        Color:
                            rgba:hex('#44475a')
                        Rectangle:
                            size:self.size
                            pos:self.pos
                    BoxLayout:
                        orientation:'vertical'
                        canvas:
                            Color:
                                rgba:hex('#6272a4')
                            RoundedRectangle:
                                radius: [20, 20, 20, 20]
                                size:self.size
                                pos:self.pos
                        Widget:
                        AnchorLayout:
                            anchor_x:'center'
                            size_hint_y:None
                            height:'90dp'
                            KVIconInput:
                                id:input_file
                                size_hint_x:0.85
                            
                                label_defaut_color:[208, 208, 208, 1]
                                text_input_color:[0, 0, 0, 1]
                                line_color:[0, 0, 0, 1]
                                background_color:[1, 1, 1, 0.75]
                                
                                label_text:'Open File'
                                icon_right_source:[root._icons+'create.png']
                                icon_right_state:'button'
                                
                                on_icon_right_pos:
                                    self.icon_right.source = root._icons+'path.png'
                                on_icon_right_pos_release:
                                    self.icon_right.source = root._icons+'create.png'
                                on_icon_right_release:root.search_path()
                                on_input_press:
                                    self.input.text = 'Enter local file' if \
                                    self.input.text == '' else self.input.text
                                on_input_text:
                                    self.input.text = '' if \
                                    self.input.text == 'Enter local file' else self.input.text
                        AnchorLayout:
                            anchor_x:'center'
                            size_hint_y:None
                            height:'90dp'
                            KVIconInput:
                                id:input_create
                                size_hint_x:0.85
                                
                                label_defaut_color:[208,208,208,1]
                                text_input_color:[0,0,0,1]
                                line_color:[0,0,0,1]
                                icon_right_color:[0,0,0,1]
                                icon_right_color_pos:[10,0,0,1]
                                background_color:[1,1,1,.75]

                                icon_right_source:[root._icons+'add_white.png']
                                icon_right_state:'button'
                                label_text:'Create File'

                                on_icon_right_release:
                                    root.path_file_created(self.input.text, True)
                                on_input_press:
                                    self.input.text = 'Enter name file' if \
                                    self.input.text == '' else self.input.text  
                                on_input_text:
                                    self.input.text = '' if \
                                    self.input.text == 'Enter name file' else self.input.text
                        Widget:
        Screen:
            name:'tela_kv'
            BoxLayout:
                orientation:'vertical'
                id:boxkv
                canvas:
                    Color:
                        rgba:hex('#44475a')
                    Rectangle:
                        size:self.size
                        pos:self.pos
                TollBarTop:
                    AnchorIcon:
                        KVButtonIcon:
                            icon_source:root._icons+'back.png'
                            on_release:root.volta()
                    Widget:
                    AnchorIcon:
                        KVButtonIcon:
                            icon_color:root.orange_sunset
                            icon_source:root._icons+'editor.png'
                            on_press:
                                root.create_editor() if root.editors == [] else \
                                root.hide_editor(root.index_editor-1)
                    AnchorIcon:
                        KVToggleButtonIcon:
                            icon_color:root.orange_sunset
                            icon_source:root._icons+'repetition.png'
                            id:bt_toggle
                            on_state: root.reload(self.state)
                    AnchorIcon:
                        KVToggleButtonIcon:
                            icon_color:root.orange_sunset
                            icon_source:root._icons+'terminal2.png'
                            on_state:root.update_debug(self.state)
                            id:btn_debug
                    AnchorIcon:
                        KVButtonIcon:
                            icon_color:[1, 1, 1, 1]
                            icon_source:root._icons+'reload1.png'
                            on_press: root.allow_loading()
                    Widget:
                    AnchorIcon:
                        KVButtonIcon:
                            icon_source:root._icons+'exit.png'
                            on_release:app.stop(app)
                BoxLayout:
                    id:boxCode
                    Button:
                        size_hint_x:None
                        width:'30dp'
                        x_touch: 0
                        can:False
                        on_touch_down:
                            self.x_touch = args[1].pos[0]
                            self.can = False if not self.collide_point(*args[1].pos) else True
                        on_touch_move:
                            self.x_touch = root.splitter_editor(self.x_touch, args[1].pos[0], telinhas)\
                            if self.can else self.x_touch
                            
                    ScreenManager:
                        id:telinhas
                        size_hint_x:0.5
                        Screen:
                            name:'ScreenWidget'
                            BoxLayout:
                                orientation: 'vertical'
                                GridLayout:
                                    canvas.before:
                                        Color:
                                            rgba: (0.12, 0.12, 0.12, 1)
                                        Rectangle:
                                            size: self.size
                                            pos: self.pos
                                    rows: 1
                                    id: tab_manager
                                    size_hint_y: None
                                    height: '45dp'
                                    AnchorIcon:
                                        KVButtonIcon:
                                            icon_source:root._icons+'zoom-out.png'
                                            on_press:smartphone.width = smartphone.width + dp(30)
                                            size:'30dp', '30dp'
                                    AnchorIcon:
                                        KVButtonIcon:
                                            icon_source:root._icons+'zoom-in.png'
                                            on_press:smartphone.width = smartphone.width - dp(30)
                                            size:'30dp', '30dp'
                                    AnchorIcon:
                                        ToggleButton:
                                            canvas:
                                                Clear
                                                PushMatrix
                                                Color:
                                                    rgba:[1, 1, 1, 1]
                                                Rotate:
                                                    angle:self.angle
                                                    origin: self.center_x, self.center_y
                                                Rectangle:
                                                    size:self.size
                                                    pos:self.pos
                                                    source:root._icons+'iphone-mobile.png'
                                                PopMatrix
                                            size_hint:None, None
                                            size:'30dp', '30dp'
                                            background_color:[0, 0, 0, 0]
                                            id:orient
                                            angle:0
                                            on_state:
                                                self.angle = 90 if self.state == 'down' else 0
                                    AnchorIcon:
                                        KVButtonIcon:
                                            icon_source: root._icons+'three-dots.png'
                                            size:'30dp', '30dp'
                                            on_release: root.dropdown.open(self)
                                AnchorLayout:
                                    padding:[dp(15), dp(15), dp(15), dp(15)]  
                                    BoxLayout:
                                        id:conteiner
                                        canvas:
                                            Rotate:
                                                angle: orient.angle
                                                origin: self.center_x, self.center_y
                                        canvas.after:
                                            Color:
                                                rgba: [1, 1, 1, 1]
                                            Rectangle:
                                                size: self.size
                                                pos: self.pos
                                                source: self.phone_img
                                        on_size:
                                            root.change_screens()
                                        phone_img:root._smartphones+'samsung-s10.png'
                                        property:root.properties_screens['samsung-s10.png']
                                        FloatLayout:
                                            size_hint:None, None
                                            size: (0, 0)
                                            BoxStencil:
                                                size: (smartphone.width*sct.scale, smartphone.height*sct.scale)
                                                x:
                                                    conteiner.x + (conteiner.width/2) - \
                                                    (self.width/2) + conteiner.property['x']
                                                y:
                                                    conteiner.y + (conteiner.height/2) - \
                                                    (self.height/2) + conteiner.property['y']
                                                Scatter:
                                                    do_rotation: False
                                                    do_scale: False
                                                    do_translation: False
                                                    auto_bring_to_front: False
                                                    scale: (conteiner.width*conteiner.property['scale']) / smartphone.width
                                                    id:sct
                                                    AnchorLayout:
                                                        id:smartphone
                                                        size_hint:None, None
                                                        width: dp(400)
                                                        height:
                                                            (conteiner.height**2) * conteiner.property['height'] / \
                                                            (conteiner.height*sct.scale + 1/100)
<BoxStencil@BoxLayout+StencilView>:
    size_hint:None, None

<Debug>:
    orientation:'vertical'
    size_hint_y:None
    height:'200dp'
    Label:
        text:'Debug' 
        size_hint_y:None
        height:'40dp'
        font_size: '20sp'
        bold:True
        canvas.before:
            Color:
                rgba:hex('#44475a')
            Rectangle:
                size:self.size
                pos:self.pos
    TextInput:
        id: text_debug
        #font_size:'16dp'
        # background_color:hex('#282a36')
